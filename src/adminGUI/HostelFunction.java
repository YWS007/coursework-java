
package adminGUI;

import adminClass.Hostel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class HostelFunction extends javax.swing.JFrame {

    private DefaultTableModel model = new DefaultTableModel();
    private String[] columns = {"Hostel ID","Hostel Name","Capacity"};
    private int row;
    
    public HostelFunction() {
        //set window size
        final int WINDOW_WIDTH = 860;
        final int WINDOW_HEIGHT = 650;
        
        model.setColumnIdentifiers(columns);  //set the column name
        initComponents();
        
        setTitle("APU HOSTEL");
        setSize(WINDOW_WIDTH, WINDOW_HEIGHT);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tCapacity = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        bView = new javax.swing.JButton();
        bAdd = new javax.swing.JButton();
        bUpdate = new javax.swing.JButton();
        bDelete = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mBack = new javax.swing.JMenuItem();
        mLogout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Hostel Management");

        jLabel2.setText("Hostel ID :");

        jLabel3.setText("Hostel Name : ");

        jLabel4.setText("Capacity :");

        jTable1.setModel(model);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        bView.setText("View");
        bView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bViewActionPerformed(evt);
            }
        });

        bAdd.setText("Add");
        bAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddActionPerformed(evt);
            }
        });

        bUpdate.setText("Update");
        bUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpdateActionPerformed(evt);
            }
        });

        bDelete.setText("Delete");
        bDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        mBack.setText("Back");
        mBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mBackActionPerformed(evt);
            }
        });
        jMenu1.add(mBack);

        mLogout.setText("Logout");
        mLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mLogoutActionPerformed(evt);
            }
        });
        jMenu1.add(mLogout);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bView, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 705, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(bAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tID, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(tCapacity)
                                        .addComponent(tName, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(bUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(58, 58, 58)
                                .addComponent(bDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(88, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(292, 292, 292))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addComponent(bView)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(tCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bUpdate)
                    .addComponent(bAdd)
                    .addComponent(bDelete))
                .addGap(74, 74, 74))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bViewActionPerformed
        Hostel h = new Hostel();    //create object
        h.ReadFromFile("Hostel.txt");   //read file
        
        // Clear existing rows from the jTable
        model.setRowCount(0);
    
        //display information in Jtable
        for(int i=0; i<h.hostelInfo.size(); i+=3){
            Object[] record = {h.hostelInfo.get(i),h.hostelInfo.get(i+1), h.hostelInfo.get(i+2)};
            model.addRow(record);   //in the string array
        }
        
    }//GEN-LAST:event_bViewActionPerformed
    
    public void cleartextField(){   //clear the data in the text after add
            tID.setText("");    
            tName.setText("");
            tCapacity.setText("");
    }
    
    public boolean checkBlank(){    //makesure every fields are not blanked
        if(tID.getText().isEmpty() || tName.getText().isEmpty() || tCapacity.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Fields cannot be blanked.");
            return true;
        }else{
            return false;
        }
    }
    
    public boolean checkFormatCapacity(String cap){ //check the variable capacity type
        try {
            int capacity = Integer.parseInt(cap);
            return false; // Capacity is valid
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid capacity. Please enter a valid number.");
            return true; // Capacity is invalid
        }
    }

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        row = jTable1.getSelectedRow(); 
        // select the row automatically fill up
        tID.setText(String.valueOf(model.getValueAt(row,0)));
        tName.setText(String.valueOf(model.getValueAt(row,1)));
        tCapacity.setText(String.valueOf(model.getValueAt(row,2)));
        
    }//GEN-LAST:event_jTable1MouseReleased

    private void bAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddActionPerformed
        String hostelID = tID.getText(); // Get the entered hostel ID
        String hostelName = tName.getText(); // Get the entered hostel name
        String cap = tCapacity.getText(); // Get the entered capacity

        // Check if any required fields are blank using the checkBlank() method
        if (!checkBlank()){
            // Check if the capacity format is valid using the checkFormatCapacity() method
            if(!checkFormatCapacity(cap)){
                int capacity = Integer.parseInt(cap);   // Convert the capacity to an integer
                
                Hostel h = new Hostel();    //create object
                h.ReadFromFile("hostel.txt");   //read data
                // Check if the hostel ID already exists using the checkHostel() method
                if(h.checkHostel(hostelID)){
                    JOptionPane.showMessageDialog(this, "Hostel ID already exists. Please enter again.");
                    
                }else{
                    // Set the hostel ID, name, and capacity
                    h.setHostelID(hostelID);
                    h.setHostelName(hostelName);
                    h.setCapacity(capacity);
                    h.add();    // Add the hostel to the data
                    h.WriteToFile("hostel.txt");    //write data to txt file
                    Object[] record = {hostelID, hostelName, capacity};
                    model.addRow(record);   // Add the record to the model
                    JOptionPane.showMessageDialog(this, "Add Successful!");
                }
            }
        }
        //Clear text
        cleartextField();
    }//GEN-LAST:event_bAddActionPerformed

    private void bUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpdateActionPerformed
        //Get entered information
        String hostelID = tID.getText();
        String hostelName = tName.getText();
        String cap = tCapacity.getText();
        
        // Check if any required fields are blank using the checkBlank() method
        if (!checkBlank()){
            // Check if the capacity format is valid using the checkFormatCapacity() method
            if(!checkFormatCapacity(cap)){
                int capacity = Integer.parseInt(cap);
                
                Hostel h = new Hostel();    //craete object
                h.ReadFromFile("hostel.txt");   //read data from file
                h.search(tID.getText());    //search ID that want to update
                h.setHostelID(hostelID);    //set new hostelID
                h.setHostelName(hostelName);    //set new hostelName
                h.setCapacity(capacity);    //set new capacity
                h.update();     //call update method     
                h.WriteToFile("hostel.txt");    //write data to txt file
                Object[] record = {hostelID, hostelName, capacity};
                model.removeRow(row);   //remove the row you want to edit
                model.addRow(record);   // Add the record to the model
                JOptionPane.showMessageDialog(this, "Update successful!");
            }
        }
        cleartextField();   //Clear text
    }//GEN-LAST:event_bUpdateActionPerformed

    private void bDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteActionPerformed
        // Check if any required fields are blank using the checkBlank() method
        if (!checkBlank()){
            Hostel h = new Hostel();    //craete object
            h.ReadFromFile("Hostel.txt");   //read data from file
            h.search(tID.getText());    //call search() method
            h.delete();     //delete item by calling delete() method
            h.WriteToFile("Hostel.txt");    //write data to text file
            JOptionPane.showMessageDialog(this, "Delete successful!");
            model.removeRow(row);   //remove the row you want to delete  
        }
        cleartextField();   //Clear text
    }//GEN-LAST:event_bDeleteActionPerformed

    private void mLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mLogoutActionPerformed
        AdminLoginPage admin = new AdminLoginPage();
        admin.setVisible(true);
        dispose();
    }//GEN-LAST:event_mLogoutActionPerformed

    private void mBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mBackActionPerformed
        AdminInterface adminInterface = new AdminInterface();
        adminInterface.setVisible(true);
        dispose();
    }//GEN-LAST:event_mBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HostelFunction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HostelFunction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HostelFunction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HostelFunction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HostelFunction().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAdd;
    private javax.swing.JButton bDelete;
    private javax.swing.JButton bUpdate;
    private javax.swing.JButton bView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JMenuItem mBack;
    private javax.swing.JMenuItem mLogout;
    private javax.swing.JTextField tCapacity;
    private javax.swing.JTextField tID;
    private javax.swing.JTextField tName;
    // End of variables declaration//GEN-END:variables
}
