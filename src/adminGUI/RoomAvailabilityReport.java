
package adminGUI;

import adminClass.WriteAndReadFile;
import adminClass.Report;
import adminClass.RoomReport;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class RoomAvailabilityReport extends javax.swing.JFrame {

    private DefaultTableModel model = new DefaultTableModel();
    private String[] columns = {"Room ID","Type","Rental(RM)","Capacity","Spaces Left"};
    private int row;
    
    public RoomAvailabilityReport() {
        
        final int WINDOW_WIDTH = 860;
        final int WINDOW_HEIGHT = 650;
          
        model.setColumnIdentifiers(columns);  //set the column name
        initComponents();
        
        setTitle("APU HOSTEL");
        setSize(WINDOW_WIDTH, WINDOW_HEIGHT);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jLabel1 = new javax.swing.JLabel();
        bGenerateReport = new javax.swing.JButton();
        bPDF = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        tHostelID = new javax.swing.JTextField();
        bReset = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        mBack = new javax.swing.JMenuItem();
        mMenu = new javax.swing.JMenuItem();
        mLogout = new javax.swing.JMenuItem();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Room Availability Report");

        bGenerateReport.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        bGenerateReport.setText("Generate Report");
        bGenerateReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGenerateReportActionPerformed(evt);
            }
        });

        bPDF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        bPDF.setText("Download PDF");
        bPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPDFActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable1.setModel(model);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Hostel ID");

        bReset.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        bReset.setText("Reset");
        bReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bResetActionPerformed(evt);
            }
        });

        jMenu2.setText("File");

        mBack.setText("Back");
        mBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mBackActionPerformed(evt);
            }
        });
        jMenu2.add(mBack);

        mMenu.setText("Admin Menu");
        mMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mMenuActionPerformed(evt);
            }
        });
        jMenu2.add(mMenu);

        mLogout.setText("Logout");
        mLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mLogoutActionPerformed(evt);
            }
        });
        jMenu2.add(mLogout);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(305, 305, 305)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tHostelID, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(bReset, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(206, 206, 206)
                        .addComponent(bGenerateReport, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bPDF, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(94, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tHostelID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bReset)
                    .addComponent(bGenerateReport))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(bPDF)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        // TODO add your handling code here: 
    }//GEN-LAST:event_jTable1MouseReleased

    private void bGenerateReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGenerateReportActionPerformed
        //reset Jtable
        int rowCount = model.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        
        String id = tHostelID.getText();
        boolean idExists = false; // Flag to check if ID exists
        
        List<Object> roomInfo = new ArrayList<>();
        List<Object> space = new ArrayList<>();
        WriteAndReadFile data = new WriteAndReadFile("room.txt");
        data.read(roomInfo); //read data
        WriteAndReadFile data2 = new WriteAndReadFile("roomAvailability.txt");
        data2.read(space);  //read data
        
        //add data to Jtable
        for (int i = 0; i < roomInfo.size(); i += 5) {
            if (roomInfo.get(i + 4).equals(id)) {
                idExists = true; // Set the flag to true if ID is found
                for (int j = 0; j < space.size(); j += 3) {
                    if (roomInfo.get(i).equals(space.get(j))) {
                        double roomValue = Double.parseDouble(roomInfo.get(i + 1).toString());
                        String formattedValue = String.format("%.2f", roomValue);
                        Object[] record = {roomInfo.get(i), roomInfo.get(i + 2), formattedValue, roomInfo.get(i + 3), space.get(j + 1)};
                        model.addRow(record); // Add the record to the model
                        row++;
                    }
                }
            }
        }

        if (!idExists) {
            // ID not found, display a message or perform any desired action
            JOptionPane.showMessageDialog(this, "Hostel ID not found!");
        }
    }//GEN-LAST:event_bGenerateReportActionPerformed

    private void bPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPDFActionPerformed
        RoomReport r = new RoomReport();    //create object
        
        String filename = "Room Availability Report.pdf";   //create filename
        PdfPTable tb = r.pdfHeader();   //craete header for PDF
        //pass date in Jtable to PDF using passData() method
        for (int i=0; i<jTable1.getRowCount();i++){
            String id = jTable1.getValueAt(i, 0).toString();
            String type = jTable1.getValueAt(i, 1).toString();
            String rental = jTable1.getValueAt(i, 2).toString();
            String cap = jTable1.getValueAt(i, 3).toString();
            String space = jTable1.getValueAt(i, 4).toString();
            r.passData(tb, id, type, rental, cap, space);
        }

        //generate report to PDF with generateReport() method
        r.generateReport(filename, tb,"Room Availability for Hostel "+tHostelID.getText());
        JOptionPane.showMessageDialog(this, "Download Successful!");
    }//GEN-LAST:event_bPDFActionPerformed

    private void bResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bResetActionPerformed
        tHostelID.setText("");
        int rowCount = model.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }//GEN-LAST:event_bResetActionPerformed

    private void mMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mMenuActionPerformed
        AdminInterface adminInterface = new AdminInterface();
        adminInterface.setVisible(true);
        dispose();
    }//GEN-LAST:event_mMenuActionPerformed

    private void mLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mLogoutActionPerformed
        AdminLoginPage admin = new AdminLoginPage();
        admin.setVisible(true);
        dispose();
    }//GEN-LAST:event_mLogoutActionPerformed

    private void mBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mBackActionPerformed
        ReportMenu reportMenu = new ReportMenu();
        reportMenu.setVisible(true);
        dispose();
    }//GEN-LAST:event_mBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomAvailabilityReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomAvailabilityReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomAvailabilityReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomAvailabilityReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RoomAvailabilityReport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bGenerateReport;
    private javax.swing.JButton bPDF;
    private javax.swing.JButton bReset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JMenuItem mBack;
    private javax.swing.JMenuItem mLogout;
    private javax.swing.JMenuItem mMenu;
    private javax.swing.JTextField tHostelID;
    // End of variables declaration//GEN-END:variables
}
