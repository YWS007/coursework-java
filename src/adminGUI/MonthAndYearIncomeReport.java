
package adminGUI;

import adminClass.IncomeReport;
import adminClass.Report;
import adminClass.WriteAndReadFile;
import com.itextpdf.text.pdf.PdfPTable;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;



public class MonthAndYearIncomeReport extends javax.swing.JFrame {
    
    private DefaultTableModel model = new DefaultTableModel();
    private String[] columns = {"Date","Student ID","Payment(RM)"};
    private int row;
    
    
    public MonthAndYearIncomeReport() {
        final int WINDOW_WIDTH = 860;
        final int WINDOW_HEIGHT = 650;
        
        model.setColumnIdentifiers(columns);  //set the column name
        initComponents();
        
        setTitle("APU HOSTEL");
        setSize(WINDOW_WIDTH, WINDOW_HEIGHT);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        tYear = new javax.swing.JTextField();
        bGenerateReport = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        bPdf = new javax.swing.JButton();
        rbMonth = new javax.swing.JRadioButton();
        rbYear = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mBack = new javax.swing.JMenuItem();
        mMenu = new javax.swing.JMenuItem();
        mLogout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Income Report");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC" }));

        bGenerateReport.setText("Generate Report");
        bGenerateReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGenerateReportActionPerformed(evt);
            }
        });

        jLabel2.setText("Month");

        jLabel3.setText("Year");

        bPdf.setText("Download PDF");
        bPdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPdfActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbMonth);
        rbMonth.setText("Monthly Report");
        rbMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMonthActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbYear);
        rbYear.setText("Yearly Report");

        jLabel4.setText("Select Report");

        jTable1.setModel(model);
        jScrollPane1.setViewportView(jTable1);

        jMenu1.setText("File");

        mBack.setText("Back");
        mBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mBackActionPerformed(evt);
            }
        });
        jMenu1.add(mBack);

        mMenu.setText("Admin Menu");
        mMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mMenuActionPerformed(evt);
            }
        });
        jMenu1.add(mMenu);

        mLogout.setText("Logout");
        mLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mLogoutActionPerformed(evt);
            }
        });
        jMenu1.add(mLogout);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(318, 318, 318))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(rbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rbYear, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 383, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tYear, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bGenerateReport, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bPdf, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(55, 55, 55))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbMonth)
                    .addComponent(rbYear)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(bGenerateReport))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(bPdf)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //conver month format
    public String convertMonth(String month) {
         
        Map<String, String> monthMapping = new HashMap<>();
        monthMapping.put("JAN", "01");
        monthMapping.put("FEB", "02");            
        monthMapping.put("MAR", "03");
        monthMapping.put("APR", "04");
        monthMapping.put("MAY", "05");
        monthMapping.put("JUN", "06");
        monthMapping.put("JUL", "07");
        monthMapping.put("AUG", "08");
        monthMapping.put("SEP", "09");
        monthMapping.put("OCT", "10");
        monthMapping.put("NOV", "11");
        monthMapping.put("DEC", "12");

        String convertedMonth = monthMapping.get(month.toUpperCase());
        if (convertedMonth == null) {
            convertedMonth = "Invalid month";
        }
        return convertedMonth;  
    }
    private void rbMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbMonthActionPerformed

    private void bGenerateReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGenerateReportActionPerformed
        //Report type cannot be empty
        if (!rbMonth.isSelected() && !rbYear.isSelected()) {
            JOptionPane.showMessageDialog(this, "Please select type of report.");
            return;
        }
        //Year field cannot be empty
        if (tYear.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter year.");
            return;
        }
        //reset Jtable
        int rowCount = model.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        
        IncomeReport r = new IncomeReport();    //create object
        List<Object> paymentInfo = new ArrayList<>();
        //declare variable
        String month, year;
        double total = 0.00;
        row = 0;
        
        //if Month is choosen, find the data related to the choosen month
        if(rbMonth.isSelected()==true){
            month = (String)jComboBox1.getSelectedItem();
            String convertedMonth = convertMonth(month);    
            year = tYear.getText();
            r.searchByMonth(paymentInfo, convertedMonth, year);  //call searchByMonth() method
        }else{  
            //find data related to choosen year
            year = tYear.getText();
            r.searchByYear(paymentInfo, year);  //call searchByYear) method
        }
        
        //Calculate the total for all the payment
        for(int i=0;i<paymentInfo.size();i+=3){
            double payment = Double.parseDouble(paymentInfo.get(i + 2).toString());
            String formattedValue = String.format("%.2f", payment); //set the format to 0.00
            total += payment;   //calculate total payment
            Object[] record = {paymentInfo.get(i), paymentInfo.get(i + 1), formattedValue};
            model.addRow(record); // Add the record to the model
            row++;
        }
        String formattedTotal = String.format("%.2f", total);
        Object[] totalRecord = {"Total", "", formattedTotal}; 
        model.insertRow(row, new Object[]{});      // Insert an empty row before the total row    
        model.insertRow(row + 1, totalRecord);      // Insert the total row
        
    }//GEN-LAST:event_bGenerateReportActionPerformed

    private void mBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mBackActionPerformed
        ReportMenu reportMenu = new ReportMenu();
        reportMenu.setVisible(true);
        dispose();
    }//GEN-LAST:event_mBackActionPerformed

    private void mMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mMenuActionPerformed
        AdminInterface adminInterface = new AdminInterface();
        adminInterface.setVisible(true);
        dispose();
    }//GEN-LAST:event_mMenuActionPerformed

    private void mLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mLogoutActionPerformed
        AdminLoginPage admin = new AdminLoginPage();
        admin.setVisible(true);
        dispose();
    }//GEN-LAST:event_mLogoutActionPerformed

    private void bPdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPdfActionPerformed
        IncomeReport r = new IncomeReport();    //create object
        String filename;    //declare variable
        
        //create filename
        if(rbMonth.isSelected()==true){
            filename = "Monthly IncomeReport.pdf";
        }else{
            filename = "Yearly IncomeReport.pdf";
        }
        
        PdfPTable tb = r.pdfHeader(); //craete header for PDF
        //pass date in Jtable to PDF using passData() method
        for (int i=0; i<jTable1.getRowCount();i++){
            String date = jTable1.getValueAt(i, 0) != null ? jTable1.getValueAt(i, 0).toString() : "";
            String studentID = jTable1.getValueAt(i, 1) != null ? jTable1.getValueAt(i, 1).toString() : "";
            String payment = jTable1.getValueAt(i, 2) != null ? jTable1.getValueAt(i, 2).toString() : "";

            r.passData(tb, date, studentID, payment);
        }
        
        //generate report to PDF with generateReport() method
        if(rbMonth.isSelected()==true){
            r.generateReport(filename, tb,"Monthly Income");
        }else{
            r.generateReport(filename, tb,"Yearly Income");
        }
        JOptionPane.showMessageDialog(this, "Download Successful!");
    }//GEN-LAST:event_bPdfActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MonthAndYearIncomeReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MonthAndYearIncomeReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MonthAndYearIncomeReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MonthAndYearIncomeReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MonthAndYearIncomeReport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bGenerateReport;
    private javax.swing.JButton bPdf;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JMenuItem mBack;
    private javax.swing.JMenuItem mLogout;
    private javax.swing.JMenuItem mMenu;
    private javax.swing.JRadioButton rbMonth;
    private javax.swing.JRadioButton rbYear;
    private javax.swing.JTextField tYear;
    // End of variables declaration//GEN-END:variables
}
